from fastapi import APIRouter
from pydantic import BaseModel
from markdown import markdown
import weasyprint

router = APIRouter()

class RiskRequest(BaseModel):
    answers: list[bool]  # Exactly 10 yes/no answers
    company_name: str
    contact_email: str

@router.post("/risk-wizard")
async def risk_wizard(req: RiskRequest):
    # TODO: replace with real LLM assessment
    risk = "medium" if any(req.answers[:5]) else "minimal"
    actions = [
        "Provide transparency notice to end-users",
        "Generate Annex IV technical documentation",
    ] if risk != "minimal" else []
    return {"risk_class": risk, "required_actions": actions}

@router.post("/pdf")
async def generate_pdf(req: RiskRequest):
    html = markdown(f"""
# AI‑Act Lite – Risk Report (BETA)

**Company:** {req.company_name}

**Contact:** {req.contact_email}

---

## Risk classification

> _Generated by wizard: pending…_

## Next steps

1. Provide transparency notice to end-users
2. Generate Annex‑IV documentation
""")
    pdf_bytes = weasyprint.HTML(string=html).write_pdf()
    return pdf_bytes  # FastAPI sets media‑type automatically